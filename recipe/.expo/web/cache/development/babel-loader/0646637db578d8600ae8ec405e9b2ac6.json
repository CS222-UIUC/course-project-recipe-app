{"ast":null,"code":"import * as React from 'react';\n\nvar NavigationContent = function NavigationContent(_ref) {\n  var render = _ref.render,\n      children = _ref.children;\n  return render(children);\n};\n\nexport default function useComponent(render) {\n  var renderRef = React.useRef(render);\n  renderRef.current = render;\n  React.useEffect(function () {\n    renderRef.current = null;\n  });\n  return React.useRef(function (_ref2) {\n    var children = _ref2.children;\n    var render = renderRef.current;\n\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n\n    return React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiC;EAAA,IAA9BC,MAA8B,QAA9BA,MAA8B;EAAA,IAAtBC,QAAsB,QAAtBA,QAAsB;EACzD,OAAOD,MAAM,CAACC,QAAD,CAAb;AADF;;AAIA,eAAe,SAASC,YAAT,CAAsBF,MAAtB,EAAsC;EACnD,IAAMG,SAAS,GAAGL,KAAK,CAACM,MAANN,CAA4BE,MAA5BF,CAAlB;EAKAK,SAAS,CAACE,OAAVF,GAAoBH,MAApBG;EAEAL,KAAK,CAACQ,SAANR,CAAgB,YAAM;IACpBK,SAAS,CAACE,OAAVF,GAAoB,IAApBA;EADF;EAIA,OAAOL,KAAK,CAACM,MAANN,CAAa,iBAAiD;IAAA,IAA9CG,QAA8C,SAA9CA,QAA8C;IACnE,IAAMD,MAAM,GAAGG,SAAS,CAACE,OAAzB;;IAEA,IAAIL,MAAM,KAAK,IAAf,EAAqB;MACnB,MAAM,IAAIO,KAAJ,CACJ,+EADI,CAAN;IAGD;;IAED,OAAOT,oBAACC,iBAAD;MAAmBC,MAAM,EAAEA;IAA3B,GAAoCC,QAApC,CAAP;EATK,GAUJI,OAVH;AAWD","names":["React","NavigationContent","render","children","useComponent","renderRef","useRef","current","useEffect","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"module"}