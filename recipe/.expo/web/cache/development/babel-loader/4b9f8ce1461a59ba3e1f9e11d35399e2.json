{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./StyleSheet.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Scroller(_ref) {\n  var items = _ref.items;\n\n  var _useState = useState([{\n    listItems: 'test1',\n    key: '1'\n  }, {\n    listItems: 'test2',\n    key: '2'\n  }, {\n    listItems: 'test1',\n    key: '3'\n  }, {\n    listItems: 'test1',\n    key: '4'\n  }, {\n    listItems: 'test1',\n    key: '5'\n  }, {\n    listItems: 'test1',\n    key: '6'\n  }, {\n    listItems: 'test1',\n    key: '7'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listItems = _useState2[0],\n      setList = _useState2[1];\n\n  return _jsx(View, {\n    style: styles.scrollview,\n    children: _jsx(ScrollView, {\n      children: listItems.map(function (item) {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: item.listItems\n          })\n        }, item.key);\n      })\n    })\n  });\n}\n\nexport default Scroller;","map":{"version":3,"names":["React","useState","styles","Scroller","items","listItems","key","setList","scrollview","map","item"],"sources":["/Users/patrickcunningham/Programming/recipe/recipe/components/ScrollView.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, ScrollView } from 'react-native';\nimport {styles} from \"./StyleSheet.js\";\n\n\nfunction Scroller({items}) {\n    const[listItems, setList] = useState([\n        { listItems: 'test1', key: '1'},\n        { listItems: 'test2', key: '2'},\n        { listItems: 'test1', key: '3'},\n        { listItems: 'test1', key: '4'},\n        { listItems: 'test1', key: '5'},\n        { listItems: 'test1', key: '6'},\n        { listItems: 'test1', key: '7'},\n      ]);\n    return (\n        <View style = {styles.scrollview}> \n            <ScrollView> \n                { listItems.map((item) => {\n                    return (\n                        <View key={item.key}>\n                            <Text >{item.listItems}</Text>\n                        </View>\n                    )\n                })}\n            </ScrollView> \n            \n        </View>\n    );\n}\nexport default Scroller;\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,SAAQC,MAAR;;;AAGA,SAASC,QAAT,OAA2B;EAAA,IAARC,KAAQ,QAARA,KAAQ;;EACvB,gBAA4BH,QAAQ,CAAC,CACjC;IAAEI,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CADiC,EAEjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CAFiC,EAGjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CAHiC,EAIjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CAJiC,EAKjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CALiC,EAMjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CANiC,EAOjC;IAAED,SAAS,EAAE,OAAb;IAAsBC,GAAG,EAAE;EAA3B,CAPiC,CAAD,CAApC;EAAA;EAAA,IAAMD,SAAN;EAAA,IAAiBE,OAAjB;;EASA,OACI,KAAC,IAAD;IAAM,KAAK,EAAIL,MAAM,CAACM,UAAtB;IAAA,UACI,KAAC,UAAD;MAAA,UACMH,SAAS,CAACI,GAAV,CAAc,UAACC,IAAD,EAAU;QACtB,OACI,KAAC,IAAD;UAAA,UACI,KAAC,IAAD;YAAA,UAAQA,IAAI,CAACL;UAAb;QADJ,GAAWK,IAAI,CAACJ,GAAhB,CADJ;MAKH,CANC;IADN;EADJ,EADJ;AAcH;;AACD,eAAeH,QAAf"},"metadata":{},"sourceType":"module"}